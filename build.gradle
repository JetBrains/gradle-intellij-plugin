plugins {
    id 'com.gradle.plugin-publish' version '0.9.7'
    id 'synapticloop.documentr' version '1.3.4'
    id 'java-gradle-plugin'
    id 'maven'
}

apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'

sourceCompatibility = 1.7
targetCompatibility = 1.7
plugins.withType(JavaPlugin) {
    project.tasks.withType(GroovyCompile) { task ->
        task.sourceCompatibility = project.sourceCompatibility
        task.targetCompatibility = project.targetCompatibility
    }
}

repositories {
    maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }
    maven { url mavenCentralUrl }
    mavenCentral()
    jcenter()
}

dependencies {
    compile localGroovy()
    compile gradleApi()
    compile 'org.jetbrains:annotations:13.0'
    compile 'org.jetbrains.intellij:plugin-repository-rest-client:0.4.28'
    compile 'org.jetbrains.intellij.plugins:structure-base:3.24'
    compile 'org.jetbrains.intellij.plugins:structure-intellij:3.24'
    compile 'de.undercouch:gradle-download-task:3.4.2'

    testCompile gradleTestKit()
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4', {
        exclude module: 'groovy-all'
    }
    testCompile 'junit:junit:4.12'
}

version = '0.3.6'
group = 'org.jetbrains.intellij.plugins'
description = """
This plugin allows you to build plugins for IntelliJ platform using specific IntelliJ SDK and bundled plugins.

The plugin adds extra IntelliJ-specific dependencies, patches processResources tasks to fill some tags 
(name, version) in `plugin.xml` with appropriate values, patches compile tasks to instrument code with 
nullability assertions and forms classes made with IntelliJ GUI Designer and provides some build steps which might be
helpful while developing plugins for IntelliJ platform.
"""

pluginBundle {
    website = 'https://github.com/JetBrains/gradle-intellij-plugin'
    vcsUrl = 'https://github.com/JetBrains/gradle-intellij-plugin'
    description = 'Plugin for building plugins for IntelliJ IDEs'
    tags = ['intellij', 'jetbrains', 'idea']

    //noinspection GroovyAssignabilityCheck
    plugins {
        intellijPlugin {
            id = 'org.jetbrains.intellij'
            displayName = 'Gradle IntelliJ Plugin'
        }
    }
}

task cacheIntolerantTest(type: Test) {
    configureTests(it)
    include '**/DownloadIntelliJSpec.class'
    filter.failOnNoMatchingTests = false
}

test {
    configureTests(it)
    exclude '**/DownloadIntelliJSpec.class'
    dependsOn cacheIntolerantTest
}

def configureTests(testTask) {
    def testGradleHomePath = "$buildDir/testGradleHome"
    testTask.doFirst {
        new File(testGradleHomePath).mkdir()
    }
    testTask.systemProperties['test.gradle.home'] = testGradleHomePath
    testTask.systemProperties['plugins.repo'] = pluginsRepo
    testTask.outputs.dir(testGradleHomePath)

    try {
        if (InetAddress.getByName("jetbrains-com-mirror.labs.intellij.net").isReachable(300)) {
            testTask.systemProperties['jbre.repo'] = 'http://repo.labs.intellij.net/intellij-jdk'
        }
    }
    catch (UnknownHostException ignore) {
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                artifactId project.name
                name 'Gradle IntelliJ Plugin'
                description project.description
                version "$snapshotVersion-SNAPSHOT"
                url 'https://github.com/JetBrains/gradle-intellij-plugin'
                packaging 'jar'

                scm {
                    connection 'scm:git:https://github.com/JetBrains/gradle-intellij-plugin/'
                    developerConnection 'scm:git:https://github.com/JetBrains/gradle-intellij-plugin/'
                    url 'https://github.com/JetBrains/gradle-intellij-plugin/'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'zolotov'
                        name 'Alexander Zolotov'
                        email 'zolotov@jetbrains.com'
                    }
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.8.1'
    distributionUrl = "https://cache-redirector.jetbrains.com/services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}
