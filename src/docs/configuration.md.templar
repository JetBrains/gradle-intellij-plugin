{pre

## Configuration

Plugin provides following options to configure target IntelliJ SDK and build archive

### Setup DSL

The following attributes are apart of the Setup DSL <kbd>intellij { ... }</kbd> in which allows you to setup the environment and dependencies.

pre}
{\n}


{-- --------------------------------------------------------------------------------------------------------------- --}
{-- --------------------------------------------------------------------------------------------------------------- --}
{--                                               INTELLIJ DSL TABLE                                                --}
{-- --------------------------------------------------------------------------------------------------------------- --}
{-- --------------------------------------------------------------------------------------------------------------- --}

| **Attributes** | **Values** | {\n}
| :------------- | :--------- | {\n}

{-- --------------------------------------------------------------------------------------------------------------- --}
{--                                                   TABLE CONTENT                                                 --}
{-- --------------------------------------------------------------------------------------------------------------- --}

| <kbd>pluginName</kbd> - The name of the target zip-archive and defines the name of plugin artifact.
|
**Acceptable Values:** <br/><kbd>String</kbd> - `'gradle-intellij-plugin'` <br/><br/>

**Default Value:** <kbd>$project.name</kbd>
|{\n}

{-- --------------------------------------------------------------------------------------------------------------- --}
{-- --------------------------------------------------------------------------------------------------------------- --}

| <kbd>version</kbd> - The version of the IDEA distribution that should be used as a dependency. <br/><br/>

**Notes:**
    <ul>
        <li>Value may have `IC-`, `IU-` or `JPS-` prefix in order to define IDEA distribution type.</li>
        <li>`intellij.version` and `intellij.localPath` should not be specified at the same time.</li>
    </ul>
|
**Acceptable Values:**
    <ul>
        <li><kbd>build #</kbd><br/>`'2017.2.5'` or `'IC-2017.2.5'` </li>
        <li><kbd>version #</kbd><br/>`'172.4343'` or `'IU-172.4343'` </li>
        <li><kbd>'LATEST-EAP-SNAPSHOT'</kbd></li>
        <li><kbd>'LATEST-TRUNK-SNAPSHOT'</kbd></li>
    </ul>

**Default Value:** <kbd>'LATEST-EAP-SNAPSHOT'</kbd>
|{\n}

{-- --------------------------------------------------------------------------------------------------------------- --}
{-- --------------------------------------------------------------------------------------------------------------- --}

| <kbd>type</kbd> - The type of IDEA distribution.
|
**Acceptable Values:**
    <ul>
        <li><kbd>'IC'</kbd> - Community Edition. </li>
        <li><kbd>'IU'</kbd> - Ultimate Edition. </li>
        <li><kbd>'JPS'</kbd> - JPS-only. </li>
        <li><kbd>'RD'</kbd> - Rider.</li>
    </ul>

**Default Value:** <kbd>'IC'</kbd>
|{\n}

{-- --------------------------------------------------------------------------------------------------------------- --}
{-- --------------------------------------------------------------------------------------------------------------- --}

| <kbd>plugins</kbd> -The list of bundled IDEA plugins and plugins from the [IDEA repository](https://plugins.jetbrains.com/). <br/><br/>

**Notes:**
    <ul>
        <li>Mix and match all types of acceptable values.</li>
        <li>Can be in the form of a `Groovy List` or `comma-separated list`.<br/>`['plugin1', 'plugin2']` or `'plugin1', 'plugin2'`</li><br/>
        <li>For plugins from the IDEA repository use `format 1`.</li>
        <li>For bundled plugins from the project use `format 2`.</li>
        <li>For sub-projects use `format 3`.</li>
    </ul>
|
**Acceptable Values:**
    <ol>
        <li><kbd>org.plugin.id:version[@channel]</kbd><br/>`'org.intellij.plugins.markdown:8.5.0', 'org.intellij.scala:2017.2.638@nightly'`</li>
        <li><kbd>bundledPluginName</kbd><br/>`'android', 'Groovy'`</li>
        <li><kbd>project(':projectName')</kbd><br/>`project(':plugin-subproject')`</li>
    </ol>

**Default Value\:** none
|{\n}

{-- --------------------------------------------------------------------------------------------------------------- --}
{-- --------------------------------------------------------------------------------------------------------------- --}


| <kbd>updateSinceUntilBuild</kbd> - Should plugin patch `plugin.xml` with since and until build values? <br/><br/>

**Notes:**
    <ul>
        <li>If `true` then user-defined values from `patchPluginXml.sinceBuild` and `patchPluginXml.untilBuild` will be used (or their default values if none set). </li>
    </ul>
|
**Acceptable Values:** <kbd>true</kbd> <kbd>false</kbd><br/><br/>

**Default Value:** <kbd>true</kbd>
|{\n}

{-- --------------------------------------------------------------------------------------------------------------- --}
{-- --------------------------------------------------------------------------------------------------------------- --}

| <kbd>sameSinceUntilBuild</kbd> - Should plugin patch `plugin.xml` with an until build value that is just an "open" since build?  <br/><br/>

**Notes:**
    <ul>
        <li>Is useful for building plugins against EAP IDEA builds.</li>
        <li>If `true` then the user-defined value from `patchPluginXml.sinceBuild` (or its default value) will be used as a `since` and an "open" `until` value. </li>
        <li>If `patchPluginXml.untilBuild` has a value set, then `sameSinceUntilBuild` is ignored.</li>
    </ul>
|
**Acceptable Values:** <kbd>true</kbd> <kbd>false</kbd><br/><br/>

**Default Value:** <kbd>false</kbd>
|{\n}

{-- --------------------------------------------------------------------------------------------------------------- --}
{-- --------------------------------------------------------------------------------------------------------------- --}

| <kbd>instrumentCode</kbd> - Should plugin instrument java classes with nullability assertions? <br/><br/>

**Notes:**
    <ul>
        <li>Instrumentation code cannot be performed while using Rider distributions `RD`.</li>
        <li>Might be required for compiling forms created by IntelliJ GUI designer.</li>
    </ul>
|
**Acceptable Values:** <kbd>true</kbd> <kbd>false</kbd><br/><br/>

**Default Value:** <kbd>true</kbd>
|{\n}

{-- --------------------------------------------------------------------------------------------------------------- --}
{-- --------------------------------------------------------------------------------------------------------------- --}


| <kbd>downloadSources</kbd> - Should plugin download IntelliJ sources while initializing Gradle build? <br/><br/>

**Notes:**
    <ul>
        <li>Since sources are not needed while testing on CI, you can set it to `false` for a particular environment.</li>
    </ul>
|
**Acceptable Values:** <kbd>true</kbd> <kbd>false</kbd><br/><br/>

**Default Value:** <kbd>true</kbd> if `CI` environment variable is not set
|{\n}

{-- --------------------------------------------------------------------------------------------------------------- --}
{-- --------------------------------------------------------------------------------------------------------------- --}

| <kbd>localPath</kbd> - The path to locally installed IDEA distribution that should be used as a dependency. <br/><br/>

**Notes:**
    <ul>
        <li>`intellij.version` and `intellij.localPath` should not be specified at the same time.</li>
    </ul>

|
**Acceptable Values:** <br/>
<kbd>path</kbd> - `'/Applications/IntelliJIDEA.app'`</br></br>

**Default Value:** <kbd>null</kbd>
|{\n}

{-- --------------------------------------------------------------------------------------------------------------- --}
{-- --------------------------------------------------------------------------------------------------------------- --}

| <kbd>sandboxDirectory</kbd> - The path of sandbox directory that is used for running IDEA with developing plugin.
|
**Acceptable Values:** <br/>
<kbd>path</kbd> - `'${{project.rootDir}/.sandbox'` <br/><br/>

**Default Value:** <kbd>'${{project.buildDir}/idea-sandbox'</kbd>
|{\n}

{-- --------------------------------------------------------------------------------------------------------------- --}
{-- --------------------------------------------------------------------------------------------------------------- --}

| <kbd>alternativeIdePath</kbd> - The absolute path to the locally installed JetBrains IDE. <br/><br/>

**Notes:**
    <ul>
        <li>Use this property if you want to test your plugin in any non-IDEA JetBrains IDE such as WebStorm or Android Studio.</li>
        <li>Empty value means that the IDE that was used for compiling will be used for running/debugging as well.</li>
    </ul>
|
**Acceptable Values:** <br/>
<kbd>path</kbd> - `'/Applications/Android Studio.app'`<br/><br/>

**Default Value:** none
|{\n}

{-- --------------------------------------------------------------------------------------------------------------- --}
{-- --------------------------------------------------------------------------------------------------------------- --}

| <kbd>ideaDependencyCachePath</kbd> -
The absolute path to the local directory that should be used for storing IDEA distributions. <br/><br/>
**Notes:**
    <ul>
        <li>Empty value means the Gradle cache directory will be used.</li>
    </ul>
|
**Acceptable Values:** <br/>
<kbd>path</kbd> - `'<example>'`<br/><br/>
**Default Value:** none
|{\n}{\n}

{-- --------------------------------------------------------------------------------------------------------------- --}
{-- --------------------------------------------------------------------------------------------------------------- --}
{--                                                    TABLE END                                                    --}
{-- --------------------------------------------------------------------------------------------------------------- --}
{-- --------------------------------------------------------------------------------------------------------------- --}

##### Deprecated{\n}

<details>{\n}
<summary> Deprecated Setup DSL Attributes</kbd> </summary>{\n}{\n}

| **Attribute**             | **Values** |{\n}
| :------------------------ | :--------- |{\n}
|
<kbd>systemProperties</kbd> - The map of system properties which will be passed to IDEA instance on executing `runIdea` task and tests. <br/><br/>
**Notes:**
    <ul>
        <li>Use `systemProperties` methods of a particular tasks like `runIde` or `test`.</li>
    </ul>
|
**Acceptable Values:** <br/><br/>
**Default Value:** <kbd>[]</kbd>
|{\n}{\n}

</details>{\n}

{pre

### Patching DSL
The following attributes are apart of the Patching DSL <kbd>patchPluginXml { ... }</kbd> in which allows Gradle to patch specific attributes in a set of `plugin.xml` files.

| **Attributes**            | **Default Value** |
| :------------------------ |  :---------------- |
| <kbd>version</kbd> is a value for the `<version>` tag.                                | <kbd>project.version</kbd> |
| <kbd>sinceBuild</kbd> is for the `since-build` attribute of the `<idea-version>` tag. | <kbd>IntelliJIDEABuildNumber</kbd> |
| <kbd>untilBuild</kbd> is for the `until-build` attribute of the `<idea-version>` tag. | <kbd>IntelliJIDEABranch.*</kbd> |
| <kbd>pluginDescription</kbd> is for the `<description>` tag.                          | none |
| <kbd>changeNotes</kbd> is for the `<change-notes>` tag.                               | none |
| <kbd>pluginXmlFiles</kbd> is a collection of xml files to patch.                      | All `plugin.xml` files with `<idea-plugin>` |
| <kbd>destinationDir</kbd> is a directory to store patched xml files.                  | <kbd>'${project.buildDir}/patchedPluginXmlFiles'</kbd> |

### Publishing DSL
The following attributes are apart of the Publishing DSL <kbd>publishPlugin { ... }</kbd> in which allows Gradle to upload a working plugin to the JetBrain Plugin Repository.

| **Attributes**              | **Default Value**  |
| :-------------------------- | :----------------- |
| <kbd>username</kbd> Login username | none |
| <kbd>password</kbd> Login password | none |
| <kbd>channels</kbd> List of channel names to upload plugin to.  | <kbd>[default]</kbd> |
| <kbd>host</kbd>  URL host of a plugin repository.               | <kbd>http://plugins.jetbrains.com</kbd> |
| <kbd>distributionFile</kbd> Jar or Zip file of plugin to upload | output of `buildPlugin` task |

##### Deprecated

<details>
<summary> Deprecated Publishing DSL <kbd>intellij.publish { ... }</kbd> or <kbd>intellij { publish { ... } }</kbd> </summary>

| **Attributes**              | **Default Value**  |
| :-------------------------- | :----------------- |
| <kbd>username</kbd> Login username | none |
| <kbd>password</kbd> Login password | none |
| <kbd>channel</kbd> A single channel name to upload plugin to.   | <kbd>default</kbd> |
| <kbd>channels</kbd> List of comma-separated channel names to upload plugin to.  | <kbd>default</kbd> |

</details>

pre}{\n}
